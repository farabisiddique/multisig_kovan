TruffleContract {
  constructor: [Function: TruffleContract] {
    _constructorMethods: {
      configureNetwork: [Function: configureNetwork],
      setProvider: [Function: setProvider],
      new: [Function: new],
      at: [AsyncFunction: at],
      deployed: [AsyncFunction: deployed],
      defaults: [Function: defaults],
      hasNetwork: [Function: hasNetwork],
      isDeployed: [Function: isDeployed],
      detectNetwork: [AsyncFunction: detectNetwork],
      setNetwork: [Function: setNetwork],
      setNetworkType: [Function: setNetworkType],
      setWallet: [Function: setWallet],
      resetAddress: [Function: resetAddress],
      link: [Function: link],
      clone: [Function: clone],
      addProp: [Function: addProp],
      toJSON: [Function: toJSON],
      decodeLogs: [Function: decodeLogs]
    },
    _properties: {
      contract_name: [Object],
      contractName: [Object],
      gasMultiplier: [Object],
      timeoutBlocks: [Object],
      autoGas: [Object],
      numberFormat: [Object],
      abi: [Object],
      metadata: [Function: metadata],
      network: [Function: network],
      networks: [Function: networks],
      address: [Object],
      transactionHash: [Object],
      links: [Function: links],
      events: [Function: events],
      binary: [Function: binary],
      deployedBinary: [Function: deployedBinary],
      unlinked_binary: [Object],
      bytecode: [Object],
      deployedBytecode: [Object],
      sourceMap: [Object],
      deployedSourceMap: [Object],
      source: [Object],
      sourcePath: [Object],
      legacyAST: [Object],
      ast: [Object],
      compiler: [Object],
      schema_version: [Function: schema_version],
      schemaVersion: [Function: schemaVersion],
      updated_at: [Function: updated_at],
      updatedAt: [Function: updatedAt],
      userdoc: [Function: userdoc],
      devdoc: [Function: devdoc],
      networkType: [Object],
      immutableReferences: [Object],
      generatedSources: [Object],
      deployedGeneratedSources: [Object],
      db: [Object]
    },
    _property_values: {},
    _json: {
      contractName: 'Wallet',
      abi: [Array],
      metadata: '{"compiler":{"version":"0.6.0+commit.26b70077"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address[]","name":"_approvers","type":"address[]"},{"internalType":"uint256","name":"_quorum","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"approvals","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"approveTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"approvers","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address payable","name":"to","type":"address"}],"name":"createTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getApprovers","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTransfer","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address payable","name":"to","type":"address"},{"internalType":"uint256","name":"approvals","type":"uint256"},{"internalType":"bool","name":"sent","type":"bool"}],"internalType":"struct Wallet.Transfer[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"quorum","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"transfers","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address payable","name":"to","type":"address"},{"internalType":"uint256","name":"approvals","type":"uint256"},{"internalType":"bool","name":"sent","type":"bool"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"methods":{}},"userdoc":{"methods":{}}},"settings":{"compilationTarget":{"project:/contracts/Wallet.sol":"Wallet"},"evmVersion":"istanbul","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"project:/contracts/Wallet.sol":{"keccak256":"0xa1b7f5fec57ee1106ee6cd9820a6eee60bf2d0ad99075e42f72f956f3ad27ff3","urls":["bzz-raw://b09dcaf70a0abb099f08f93a7a7308ab8e6607f468c3564da3cacf03e06982ca","dweb:/ipfs/QmY1q3rbzDpsK5etF5k8snMqjM9qvVWeWTE75czGRFrA9Y"]}},"version":1}',
      bytecode: '0x60806040523480156200001157600080fd5b506040516200131a3803806200131a8339818101604052620000379190810190620001ef565b81600090805190602001906200004f9291906200005f565b5080600181905550505062000312565b828054828255906000526020600020908101928215620000db579160200282015b82811115620000da5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019062000080565b5b509050620000ea9190620000ee565b5090565b6200013191905b808211156200012d57600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101620000f5565b5090565b90565b6000815190506200014581620002de565b92915050565b600082601f8301126200015d57600080fd5b8151620001746200016e8262000277565b62000249565b915081818352602084019350602081019050838560208402820111156200019a57600080fd5b60005b83811015620001ce5781620001b3888262000134565b8452602084019350602083019250506001810190506200019d565b5050505092915050565b600081519050620001e981620002f8565b92915050565b600080604083850312156200020357600080fd5b600083015167ffffffffffffffff8111156200021e57600080fd5b6200022c858286016200014b565b92505060206200023f85828601620001d8565b9150509250929050565b6000604051905081810181811067ffffffffffffffff821117156200026d57600080fd5b8060405250919050565b600067ffffffffffffffff8211156200028f57600080fd5b602082029050602081019050919050565b6000620002ad82620002b4565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b620002e981620002a0565b8114620002f557600080fd5b50565b6200030381620002d4565b81146200030f57600080fd5b50565b610ff880620003226000396000f3fe60806040526004361061007f5760003560e01c8063b87141bf1161004e578063b87141bf1461014b578063cacca4a014610176578063d3650fb81461019f578063ffabc673146101dc57610086565b80631703a0181461008b5780634c12fa47146100b65780636cb3e8ef146100df5780639377d7111461010a57610086565b3661008657005b600080fd5b34801561009757600080fd5b506100a0610219565b6040516100ad9190610e32565b60405180910390f35b3480156100c257600080fd5b506100dd60048036036100d89190810190610a90565b61021f565b005b3480156100eb57600080fd5b506100f46103f9565b6040516101019190610d73565b60405180910390f35b34801561011657600080fd5b50610131600480360361012c9190810190610a67565b610487565b604051610142959493929190610e4d565b60405180910390f35b34801561015757600080fd5b506101606104f7565b60405161016d9190610d95565b60405180910390f35b34801561018257600080fd5b5061019d60048036036101989190810190610a67565b6105e5565b005b3480156101ab57600080fd5b506101c660048036036101c19190810190610a67565b610981565b6040516101d39190610d58565b60405180910390f35b3480156101e857600080fd5b5061020360048036036101fe9190810190610a2b565b6109bd565b6040516102109190610db7565b60405180910390f35b60015481565b600080905060008090505b6000805490508110156102b4573373ffffffffffffffffffffffffffffffffffffffff166000828154811061025b57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156102a757600191505b808060010191505061022a565b5060011515811515146102fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f390610df2565b60405180910390fd5b60026040518060a0016040528060028054905081526020018581526020018473ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600015158152509080600181540180825580915050600190039060005260206000209060050201600090919091909150600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003015560808201518160040160006101000a81548160ff0219169083151502179055505050505050565b6060600080548060200260200160405190810160405280929190818152602001828054801561047d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610433575b5050505050905090565b6002818154811061049457fe5b90600052602060002090600502016000915090508060000154908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040160009054906101000a900460ff16905085565b60606002805480602002602001604051908101604052809291908181526020016000905b828210156105dc57838290600052602060002090600502016040518060a001604052908160008201548152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900460ff1615151515815250508152602001906001019061051b565b50505050905090565b600080905060008090505b60008054905081101561067a573373ffffffffffffffffffffffffffffffffffffffff166000828154811061062157fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561066d57600191505b80806001019150506105f0565b5060011515811515146106c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b990610df2565b60405180910390fd5b60001515600283815481106106d357fe5b906000526020600020906005020160040160009054906101000a900460ff16151514610734576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072b90610dd2565b60405180910390fd5b60001515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060009054906101000a900460ff161515146107d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cf90610e12565b60405180910390fd5b6001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060006101000a81548160ff0219169083151502179055506002828154811061084e57fe5b9060005260206000209060050201600301600081548092919060010191905055506001546002838154811061087f57fe5b9060005260206000209060050201600301541061097d576001600283815481106108a557fe5b906000526020600020906005020160040160006101000a81548160ff0219169083151502179055506000600283815481106108dc57fe5b906000526020600020906005020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060006002848154811061091f57fe5b90600052602060002090600502016001015490508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610979573d6000803e3d6000fd5b5050505b5050565b6000818154811061098e57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60036020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b6000813590506109fb81610f7d565b92915050565b600081359050610a1081610f94565b92915050565b600081359050610a2581610fab565b92915050565b60008060408385031215610a3e57600080fd5b6000610a4c858286016109ec565b9250506020610a5d85828601610a16565b9150509250929050565b600060208284031215610a7957600080fd5b6000610a8784828501610a16565b91505092915050565b60008060408385031215610aa357600080fd5b6000610ab185828601610a16565b9250506020610ac285828601610a01565b9150509250929050565b6000610ad88383610b1a565b60208301905092915050565b6000610af08383610cd2565b60a08301905092915050565b610b0581610f35565b82525050565b610b1481610f35565b82525050565b610b2381610f23565b82525050565b610b3281610f23565b82525050565b6000610b4382610ec0565b610b4d8185610ef0565b9350610b5883610ea0565b8060005b83811015610b89578151610b708882610acc565b9750610b7b83610ed6565b925050600181019050610b5c565b5085935050505092915050565b6000610ba182610ecb565b610bab8185610f01565b9350610bb683610eb0565b8060005b83811015610be7578151610bce8882610ae4565b9750610bd983610ee3565b925050600181019050610bba565b5085935050505092915050565b610bfd81610f47565b82525050565b610c0c81610f47565b82525050565b6000610c1f601083610f12565b91507f416c726561647920617070726f766564000000000000000000000000000000006000830152602082019050919050565b6000610c5f601683610f12565b91507f4f6e6c7920417070726f7665727320616c6c6f776564000000000000000000006000830152602082019050919050565b6000610c9f601583610f12565b91507f43616e206e6f7420617070726f766520747769636500000000000000000000006000830152602082019050919050565b60a082016000820151610ce86000850182610d3a565b506020820151610cfb6020850182610d3a565b506040820151610d0e6040850182610afc565b506060820151610d216060850182610d3a565b506080820151610d346080850182610bf4565b50505050565b610d4381610f73565b82525050565b610d5281610f73565b82525050565b6000602082019050610d6d6000830184610b29565b92915050565b60006020820190508181036000830152610d8d8184610b38565b905092915050565b60006020820190508181036000830152610daf8184610b96565b905092915050565b6000602082019050610dcc6000830184610c03565b92915050565b60006020820190508181036000830152610deb81610c12565b9050919050565b60006020820190508181036000830152610e0b81610c52565b9050919050565b60006020820190508181036000830152610e2b81610c92565b9050919050565b6000602082019050610e476000830184610d49565b92915050565b600060a082019050610e626000830188610d49565b610e6f6020830187610d49565b610e7c6040830186610b0b565b610e896060830185610d49565b610e966080830184610c03565b9695505050505050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610f2e82610f53565b9050919050565b6000610f4082610f53565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610f8681610f23565b8114610f9157600080fd5b50565b610f9d81610f35565b8114610fa857600080fd5b50565b610fb481610f73565b8114610fbf57600080fd5b5056fea2646970667358221220b0efe9b574ff29e7a32a342033f8122d0f3153fca533e8ba1fc8816bc62bc0c264736f6c63430006000033',
      deployedBytecode: '0x60806040526004361061007f5760003560e01c8063b87141bf1161004e578063b87141bf1461014b578063cacca4a014610176578063d3650fb81461019f578063ffabc673146101dc57610086565b80631703a0181461008b5780634c12fa47146100b65780636cb3e8ef146100df5780639377d7111461010a57610086565b3661008657005b600080fd5b34801561009757600080fd5b506100a0610219565b6040516100ad9190610e32565b60405180910390f35b3480156100c257600080fd5b506100dd60048036036100d89190810190610a90565b61021f565b005b3480156100eb57600080fd5b506100f46103f9565b6040516101019190610d73565b60405180910390f35b34801561011657600080fd5b50610131600480360361012c9190810190610a67565b610487565b604051610142959493929190610e4d565b60405180910390f35b34801561015757600080fd5b506101606104f7565b60405161016d9190610d95565b60405180910390f35b34801561018257600080fd5b5061019d60048036036101989190810190610a67565b6105e5565b005b3480156101ab57600080fd5b506101c660048036036101c19190810190610a67565b610981565b6040516101d39190610d58565b60405180910390f35b3480156101e857600080fd5b5061020360048036036101fe9190810190610a2b565b6109bd565b6040516102109190610db7565b60405180910390f35b60015481565b600080905060008090505b6000805490508110156102b4573373ffffffffffffffffffffffffffffffffffffffff166000828154811061025b57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156102a757600191505b808060010191505061022a565b5060011515811515146102fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f390610df2565b60405180910390fd5b60026040518060a0016040528060028054905081526020018581526020018473ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600015158152509080600181540180825580915050600190039060005260206000209060050201600090919091909150600082015181600001556020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003015560808201518160040160006101000a81548160ff0219169083151502179055505050505050565b6060600080548060200260200160405190810160405280929190818152602001828054801561047d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610433575b5050505050905090565b6002818154811061049457fe5b90600052602060002090600502016000915090508060000154908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040160009054906101000a900460ff16905085565b60606002805480602002602001604051908101604052809291908181526020016000905b828210156105dc57838290600052602060002090600502016040518060a001604052908160008201548152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900460ff1615151515815250508152602001906001019061051b565b50505050905090565b600080905060008090505b60008054905081101561067a573373ffffffffffffffffffffffffffffffffffffffff166000828154811061062157fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561066d57600191505b80806001019150506105f0565b5060011515811515146106c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b990610df2565b60405180910390fd5b60001515600283815481106106d357fe5b906000526020600020906005020160040160009054906101000a900460ff16151514610734576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072b90610dd2565b60405180910390fd5b60001515600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060009054906101000a900460ff161515146107d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cf90610e12565b60405180910390fd5b6001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060006101000a81548160ff0219169083151502179055506002828154811061084e57fe5b9060005260206000209060050201600301600081548092919060010191905055506001546002838154811061087f57fe5b9060005260206000209060050201600301541061097d576001600283815481106108a557fe5b906000526020600020906005020160040160006101000a81548160ff0219169083151502179055506000600283815481106108dc57fe5b906000526020600020906005020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060006002848154811061091f57fe5b90600052602060002090600502016001015490508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610979573d6000803e3d6000fd5b5050505b5050565b6000818154811061098e57fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60036020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b6000813590506109fb81610f7d565b92915050565b600081359050610a1081610f94565b92915050565b600081359050610a2581610fab565b92915050565b60008060408385031215610a3e57600080fd5b6000610a4c858286016109ec565b9250506020610a5d85828601610a16565b9150509250929050565b600060208284031215610a7957600080fd5b6000610a8784828501610a16565b91505092915050565b60008060408385031215610aa357600080fd5b6000610ab185828601610a16565b9250506020610ac285828601610a01565b9150509250929050565b6000610ad88383610b1a565b60208301905092915050565b6000610af08383610cd2565b60a08301905092915050565b610b0581610f35565b82525050565b610b1481610f35565b82525050565b610b2381610f23565b82525050565b610b3281610f23565b82525050565b6000610b4382610ec0565b610b4d8185610ef0565b9350610b5883610ea0565b8060005b83811015610b89578151610b708882610acc565b9750610b7b83610ed6565b925050600181019050610b5c565b5085935050505092915050565b6000610ba182610ecb565b610bab8185610f01565b9350610bb683610eb0565b8060005b83811015610be7578151610bce8882610ae4565b9750610bd983610ee3565b925050600181019050610bba565b5085935050505092915050565b610bfd81610f47565b82525050565b610c0c81610f47565b82525050565b6000610c1f601083610f12565b91507f416c726561647920617070726f766564000000000000000000000000000000006000830152602082019050919050565b6000610c5f601683610f12565b91507f4f6e6c7920417070726f7665727320616c6c6f776564000000000000000000006000830152602082019050919050565b6000610c9f601583610f12565b91507f43616e206e6f7420617070726f766520747769636500000000000000000000006000830152602082019050919050565b60a082016000820151610ce86000850182610d3a565b506020820151610cfb6020850182610d3a565b506040820151610d0e6040850182610afc565b506060820151610d216060850182610d3a565b506080820151610d346080850182610bf4565b50505050565b610d4381610f73565b82525050565b610d5281610f73565b82525050565b6000602082019050610d6d6000830184610b29565b92915050565b60006020820190508181036000830152610d8d8184610b38565b905092915050565b60006020820190508181036000830152610daf8184610b96565b905092915050565b6000602082019050610dcc6000830184610c03565b92915050565b60006020820190508181036000830152610deb81610c12565b9050919050565b60006020820190508181036000830152610e0b81610c52565b9050919050565b60006020820190508181036000830152610e2b81610c92565b9050919050565b6000602082019050610e476000830184610d49565b92915050565b600060a082019050610e626000830188610d49565b610e6f6020830187610d49565b610e7c6040830186610b0b565b610e896060830185610d49565b610e966080830184610c03565b9695505050505050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610f2e82610f53565b9050919050565b6000610f4082610f53565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610f8681610f23565b8114610f9157600080fd5b50565b610f9d81610f35565b8114610fa857600080fd5b50565b610fb481610f73565b8114610fbf57600080fd5b5056fea2646970667358221220b0efe9b574ff29e7a32a342033f8122d0f3153fca533e8ba1fc8816bc62bc0c264736f6c63430006000033',
      immutableReferences: undefined,
      generatedSources: undefined,
      deployedGeneratedSources: undefined,
      sourceMap: '98:1783:1:-:0;;;450:130;8:9:-1;5:2;;;30:1;27;20:12;5:2;450:130:1;;;;;;;;;;;;;;;;;;;;;;;;535:10;523:9;:22;;;;;;;;;;;;:::i;:::-;;565:7;556:6;:16;;;;450:130;;98:1783;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:134:-1:-;;89:6;83:13;74:22;;101:33;128:5;101:33;;;68:71;;;;;164:722;;292:3;285:4;277:6;273:17;269:27;259:2;;310:1;307;300:12;259:2;340:6;334:13;362:80;377:64;434:6;377:64;;;362:80;;;353:89;;459:5;484:6;477:5;470:21;514:4;506:6;502:17;492:27;;536:4;531:3;527:14;520:21;;589:6;636:3;628:4;620:6;616:17;611:3;607:27;604:36;601:2;;;653:1;650;643:12;601:2;678:1;663:217;688:6;685:1;682:13;663:217;;;746:3;768:48;812:3;800:10;768:48;;;763:3;756:61;840:4;835:3;831:14;824:21;;868:4;863:3;859:14;852:21;;720:160;710:1;707;703:9;698:14;;663:217;;;667:14;252:634;;;;;;;;894:134;;978:6;972:13;963:22;;990:33;1017:5;990:33;;;957:71;;;;;1035:528;;;1192:2;1180:9;1171:7;1167:23;1163:32;1160:2;;;1208:1;1205;1198:12;1160:2;1264:1;1253:9;1249:17;1243:24;1287:18;1279:6;1276:30;1273:2;;;1319:1;1316;1309:12;1273:2;1339:89;1420:7;1411:6;1400:9;1396:22;1339:89;;;1329:99;;1222:212;1465:2;1483:64;1539:7;1530:6;1519:9;1515:22;1483:64;;;1473:74;;1444:109;1154:409;;;;;;1570:256;;1632:2;1626:9;1616:19;;1670:4;1662:6;1658:17;1769:6;1757:10;1754:22;1733:18;1721:10;1718:34;1715:62;1712:2;;;1790:1;1787;1780:12;1712:2;1810:10;1806:2;1799:22;1610:216;;;;;1833:304;;1992:18;1984:6;1981:30;1978:2;;;2024:1;2021;2014:12;1978:2;2059:4;2051:6;2047:17;2039:25;;2122:4;2116;2112:15;2104:23;;1915:222;;;;2144:91;;2206:24;2224:5;2206:24;;;2195:35;;2189:46;;;;2242:121;;2315:42;2308:5;2304:54;2293:65;;2287:76;;;;2370:72;;2432:5;2421:16;;2415:27;;;;2449:117;2518:24;2536:5;2518:24;;;2511:5;2508:35;2498:2;;2557:1;2554;2547:12;2498:2;2492:74;;2573:117;2642:24;2660:5;2642:24;;;2635:5;2632:35;2622:2;;2681:1;2678;2671:12;2622:2;2616:74;;98:1783:1;;;;;;;',
      deployedSourceMap: '98:1783:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;153:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;153:18:1;;;:::i;:::-;;;;;;;;;;;;;;;;800:193;;8:9:-1;5:2;;;30:1;27;20:12;5:2;800:193:1;;;;;;;;;;;;;;;;:::i;:::-;;588:98;;8:9:-1;5:2;;;30:1;27;20:12;5:2;588:98:1;;;:::i;:::-;;;;;;;;;;;;;;;;323:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;323:27:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;694:98;;8:9:-1;5:2;;;30:1;27;20:12;5:2;694:98:1;;;:::i;:::-;;;;;;;;;;;;;;;;1001:531;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:531:1;;;;;;;;;;;;;;;;:::i;:::-;;120:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;120:26:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;385:54;;8:9:-1;5:2;;;30:1;27;20:12;5:2;385:54:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;153:18;;;;:::o;800:193::-;1613:12;1628:5;1613:20;;1650:6;1657:1;1650:8;;1646:143;1661:9;:16;;;;1659:1;:18;1646:143;;;1716:10;1702:24;;:9;1712:1;1702:12;;;;;;;;;;;;;;;;;;;;;;;;;:24;;;1699:77;;;1756:4;1746:14;;1699:77;1678:3;;;;;;;1646:143;;;;1816:4;1807:13;;:7;:13;;;1799:47;;;;;;;;;;;;;;;;;;;;;;901:9:::1;930:44;;;;;;;;939:9;:16;;;;930:44;;;;956:6;930:44;;;;963:2;930:44;;;;;;966:1;930:44;;;;968:5;930:44;;;;::::0;901:84:::1;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;901:84:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;800:193:::0;;;:::o;588:98::-;634:16;669:9;662:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;588:98;:::o;323:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;694:98::-;739:17;775:9;768:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;694:98;:::o;1001:531::-;1613:12;1628:5;1613:20;;1650:6;1657:1;1650:8;;1646:143;1661:9;:16;;;;1659:1;:18;1646:143;;;1716:10;1702:24;;:9;1712:1;1702:12;;;;;;;;;;;;;;;;;;;;;;;;;:24;;;1699:77;;;1756:4;1746:14;;1699:77;1678:3;;;;;;;1646:143;;;;1816:4;1807:13;;:7;:13;;;1799:47;;;;;;;;;;;;;;;;;;;;;;1099:5:::1;1079:25;;:9;1089:2;1079:13;;;;;;;;;;;;;;;;;;:18;;;;;;;;;;;;:25;;;1071:54;;;;;;;;;;;;;;;;;;;;;;1171:5;1144:32;;:9;:21;1154:10;1144:21;;;;;;;;;;;;;;;:25;1166:2;1144:25;;;;;;;;;;;;;;;;;;;;;:32;;;1136:65;;;;;;;;;;;;;;;;;;;;;;1240:4;1212:9;:21;1222:10;1212:21;;;;;;;;;;;;;;;:25;1234:2;1212:25;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;1255:9;1265:2;1255:13;;;;;;;;;;;;;;;;;;:23;;;:25;;;;;;;;;;;;;1321:6;;1296:9;1306:2;1296:13;;;;;;;;;;;;;;;;;;:23;;;:31;1293:222;;1364:4;1343:9;1353:2;1343:13;;;;;;;;;;;;;;;;;;:18;;;:25;;;;;;;;;;;;;;;;;;1383:18;1404:9;1414:2;1404:13;;;;;;;;;;;;;;;;;;:16;;;;;;;;;;;;1383:37;;1435:11;1449:9;1459:2;1449:13;;;;;;;;;;;;;;;;;;:20;;;1435:34;;1484:2;:11;;:19;1496:6;1484:19;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;1484:19:1;1293:222;;;1001:531:::0;;:::o;120:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;385:54::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;142:146;;230:6;217:20;208:29;;242:41;277:5;242:41;;;202:86;;;;;295:130;;375:6;362:20;353:29;;387:33;414:5;387:33;;;347:78;;;;;432:366;;;553:2;541:9;532:7;528:23;524:32;521:2;;;569:1;566;559:12;521:2;604:1;621:53;666:7;657:6;646:9;642:22;621:53;;;611:63;;583:97;711:2;729:53;774:7;765:6;754:9;750:22;729:53;;;719:63;;690:98;515:283;;;;;;805:241;;909:2;897:9;888:7;884:23;880:32;877:2;;;925:1;922;915:12;877:2;960:1;977:53;1022:7;1013:6;1002:9;998:22;977:53;;;967:63;;939:97;871:175;;;;;1053:382;;;1182:2;1170:9;1161:7;1157:23;1153:32;1150:2;;;1198:1;1195;1188:12;1150:2;1233:1;1250:53;1295:7;1286:6;1275:9;1271:22;1250:53;;;1240:63;;1212:97;1340:2;1358:61;1411:7;1402:6;1391:9;1387:22;1358:61;;;1348:71;;1319:106;1144:291;;;;;;1443:173;;1530:46;1572:3;1564:6;1530:46;;;1605:4;1600:3;1596:14;1582:28;;1523:93;;;;;1625:257;;1752:90;1838:3;1830:6;1752:90;;;1871:4;1866:3;1862:14;1848:28;;1745:137;;;;;1890:127;1979:32;2005:5;1979:32;;;1974:3;1967:45;1961:56;;;2024:137;2123:32;2149:5;2123:32;;;2118:3;2111:45;2105:56;;;2168:103;2241:24;2259:5;2241:24;;;2236:3;2229:37;2223:48;;;2278:113;2361:24;2379:5;2361:24;;;2356:3;2349:37;2343:48;;;2429:690;;2574:54;2622:5;2574:54;;;2641:86;2720:6;2715:3;2641:86;;;2634:93;;2748:56;2798:5;2748:56;;;2824:7;2852:1;2837:260;2862:6;2859:1;2856:13;2837:260;;;2929:6;2923:13;2950:63;3009:3;2994:13;2950:63;;;2943:70;;3030:60;3083:6;3030:60;;;3020:70;;2894:203;2884:1;2881;2877:9;2872:14;;2837:260;;;2841:14;3110:3;3103:10;;2553:566;;;;;;;;3188:850;;3373:74;3441:5;3373:74;;;3460:106;3559:6;3554:3;3460:106;;;3453:113;;3587:76;3657:5;3587:76;;;3683:7;3711:1;3696:320;3721:6;3718:1;3715:13;3696:320;;;3788:6;3782:13;3809:103;3908:3;3893:13;3809:103;;;3802:110;;3929:80;4002:6;3929:80;;;3919:90;;3753:263;3743:1;3740;3736:9;3731:14;;3696:320;;;3700:14;4029:3;4022:10;;3352:686;;;;;;;;4046:94;4113:21;4128:5;4113:21;;;4108:3;4101:34;4095:45;;;4147:104;4224:21;4239:5;4224:21;;;4219:3;4212:34;4206:45;;;4259:316;;4419:67;4483:2;4478:3;4419:67;;;4412:74;;4519:18;4515:1;4510:3;4506:11;4499:39;4566:2;4561:3;4557:12;4550:19;;4405:170;;;;4584:322;;4744:67;4808:2;4803:3;4744:67;;;4737:74;;4844:24;4840:1;4835:3;4831:11;4824:45;4897:2;4892:3;4888:12;4881:19;;4730:176;;;;4915:321;;5075:67;5139:2;5134:3;5075:67;;;5068:74;;5175:23;5171:1;5166:3;5162:11;5155:44;5227:2;5222:3;5218:12;5211:19;;5061:175;;;;5299:935;5426:4;5421:3;5417:14;5507:4;5500:5;5496:16;5490:23;5519:63;5576:4;5571:3;5567:14;5553:12;5519:63;;;5446:142;5663:4;5656:5;5652:16;5646:23;5675:63;5732:4;5727:3;5723:14;5709:12;5675:63;;;5598:146;5815:4;5808:5;5804:16;5798:23;5827:79;5900:4;5895:3;5891:14;5877:12;5827:79;;;5754:158;5990:4;5983:5;5979:16;5973:23;6002:63;6059:4;6054:3;6050:14;6036:12;6002:63;;;5922:149;6144:4;6137:5;6133:16;6127:23;6156:57;6207:4;6202:3;6198:14;6184:12;6156:57;;;6081:138;5399:835;;;;6241:103;6314:24;6332:5;6314:24;;;6309:3;6302:37;6296:48;;;6351:113;6434:24;6452:5;6434:24;;;6429:3;6422:37;6416:48;;;6471:213;;6589:2;6578:9;6574:18;6566:26;;6603:71;6671:1;6660:9;6656:17;6647:6;6603:71;;;6560:124;;;;;6691:361;;6859:2;6848:9;6844:18;6836:26;;6909:9;6903:4;6899:20;6895:1;6884:9;6880:17;6873:47;6934:108;7037:4;7028:6;6934:108;;;6926:116;;6830:222;;;;;7059:441;;7267:2;7256:9;7252:18;7244:26;;7317:9;7311:4;7307:20;7303:1;7292:9;7288:17;7281:47;7342:148;7485:4;7476:6;7342:148;;;7334:156;;7238:262;;;;;7507:201;;7619:2;7608:9;7604:18;7596:26;;7633:65;7695:1;7684:9;7680:17;7671:6;7633:65;;;7590:118;;;;;7715:407;;7906:2;7895:9;7891:18;7883:26;;7956:9;7950:4;7946:20;7942:1;7931:9;7927:17;7920:47;7981:131;8107:4;7981:131;;;7973:139;;7877:245;;;;8129:407;;8320:2;8309:9;8305:18;8297:26;;8370:9;8364:4;8360:20;8356:1;8345:9;8341:17;8334:47;8395:131;8521:4;8395:131;;;8387:139;;8291:245;;;;8543:407;;8734:2;8723:9;8719:18;8711:26;;8784:9;8778:4;8774:20;8770:1;8759:9;8755:17;8748:47;8809:131;8935:4;8809:131;;;8801:139;;8705:245;;;;8957:213;;9075:2;9064:9;9060:18;9052:26;;9089:71;9157:1;9146:9;9142:17;9133:6;9089:71;;;9046:124;;;;;9177:679;;9417:3;9406:9;9402:19;9394:27;;9432:71;9500:1;9489:9;9485:17;9476:6;9432:71;;;9514:72;9582:2;9571:9;9567:18;9558:6;9514:72;;;9597:88;9681:2;9670:9;9666:18;9657:6;9597:88;;;9696:72;9764:2;9753:9;9749:18;9740:6;9696:72;;;9779:67;9841:3;9830:9;9826:19;9817:6;9779:67;;;9388:468;;;;;;;;;9863:151;;9949:3;9941:11;;9987:4;9982:3;9978:14;9970:22;;9935:79;;;;10021:171;;10127:3;10119:11;;10165:4;10160:3;10156:14;10148:22;;10113:79;;;;10199:137;;10308:5;10302:12;10292:22;;10273:63;;;;10343:157;;10472:5;10466:12;10456:22;;10437:63;;;;10507:108;;10605:4;10600:3;10596:14;10588:22;;10582:33;;;;10622:128;;10740:4;10735:3;10731:14;10723:22;;10717:33;;;;10758:178;;10888:6;10883:3;10876:19;10925:4;10920:3;10916:14;10901:29;;10869:67;;;;;10945:198;;11095:6;11090:3;11083:19;11132:4;11127:3;11123:14;11108:29;;11076:67;;;;;11152:163;;11267:6;11262:3;11255:19;11304:4;11299:3;11295:14;11280:29;;11248:67;;;;;11323:91;;11385:24;11403:5;11385:24;;;11374:35;;11368:46;;;;11421:99;;11491:24;11509:5;11491:24;;;11480:35;;11474:46;;;;11527:85;;11600:5;11593:13;11586:21;11575:32;;11569:43;;;;11619:121;;11692:42;11685:5;11681:54;11670:65;;11664:76;;;;11747:72;;11809:5;11798:16;;11792:27;;;;11826:117;11895:24;11913:5;11895:24;;;11888:5;11885:35;11875:2;;11934:1;11931;11924:12;11875:2;11869:74;;11950:133;12027:32;12053:5;12027:32;;;12020:5;12017:43;12007:2;;12074:1;12071;12064:12;12007:2;12001:82;;12090:117;12159:24;12177:5;12159:24;;;12152:5;12149:35;12139:2;;12198:1;12195;12188:12;12139:2;12133:74;',
      source: '// SPDX-License-Identifier: MIT \r\n' +
        '\r\n' +
        'pragma solidity ^0.6.0;\r\n' +
        'pragma experimental ABIEncoderV2;\r\n' +
        '\r\n' +
        'contract Wallet{\r\n' +
        '    address[] public approvers;\r\n' +
        '    uint public quorum;\r\n' +
        '    struct Transfer{\r\n' +
        '        uint id;\r\n' +
        '        uint amount;\r\n' +
        '        address payable to;\r\n' +
        '        uint approvals;\r\n' +
        '        bool sent;\r\n' +
        '    }\r\n' +
        '\r\n' +
        '    Transfer[] public transfers;\r\n' +
        '    // uint public nextId;\r\n' +
        '    mapping(address=>mapping(uint=>bool)) public approvals;\r\n' +
        '\r\n' +
        '\r\n' +
        '    constructor(address[] memory _approvers, uint _quorum) public {\r\n' +
        '        approvers = _approvers;\r\n' +
        '        quorum = _quorum;\r\n' +
        '    }\r\n' +
        '\r\n' +
        '    function getApprovers() external view returns(address[] memory){\r\n' +
        '        return approvers;\r\n' +
        '    }\r\n' +
        '\r\n' +
        '    function getTransfer() external view returns(Transfer[] memory){\r\n' +
        '        return transfers;\r\n' +
        '    }\r\n' +
        '\r\n' +
        '    function createTransfer(uint amount, address payable to) external onlyApprover(){\r\n' +
        '        \r\n' +
        '        transfers.push(\r\n' +
        '            Transfer(transfers.length,amount,to,0,false)\r\n' +
        '        );\r\n' +
        '    }\r\n' +
        '\r\n' +
        '    function approveTransfer(uint id) external onlyApprover(){\r\n' +
        '\r\n' +
        '        require(transfers[id].sent==false, "Already approved");\r\n' +
        "        require(approvals[msg.sender][id]==false,'Can not approve twice');\r\n" +
        '        approvals[msg.sender][id] = true;\r\n' +
        '        transfers[id].approvals++;\r\n' +
        '\r\n' +
        '        if(transfers[id].approvals>=quorum){\r\n' +
        '            transfers[id].sent = true;\r\n' +
        '            address payable to = transfers[id].to;\r\n' +
        '            uint amount = transfers[id].amount;\r\n' +
        '            to.transfer(amount);\r\n' +
        '        }\r\n' +
        '        \r\n' +
        '    }\r\n' +
        '\r\n' +
        '    receive() payable external {}\r\n' +
        '\r\n' +
        '    modifier onlyApprover(){\r\n' +
        '\r\n' +
        '        bool allowed = false;\r\n' +
        '\r\n' +
        '        for(uint i=0;i<approvers.length;i++){\r\n' +
        '\r\n' +
        '            if(approvers[i]==msg.sender){\r\n' +
        '                allowed = true;\r\n' +
        '            }\r\n' +
        '\r\n' +
        '        }\r\n' +
        '        require(allowed==true,"Only Approvers allowed");\r\n' +
        '        _;\r\n' +
        '    }\r\n' +
        '\r\n' +
        '\r\n' +
        '\r\n' +
        '    \r\n' +
        '}\r\n',
      sourcePath: 'C:\\Users\\Win 10 Pro\\Downloads\\Smart Contract Courses\\EatTheBlock Course\\EatTheBlocks - 6 Figures Blockchain Developer\\sixFigureBlockchainProject\\contracts\\Wallet.sol',
      ast: [Object],
      legacyAST: [Object],
      compiler: [Object],
      networks: [Object],
      schemaVersion: '3.4.7',
      updatedAt: '2022-06-10T17:23:28.844Z',
      networkType: 'ethereum',
      devdoc: [Object],
      userdoc: [Object],
      db: undefined,
      timeoutBlocks: 0,
      autoGas: true,
      gasMultiplier: 1.25
    },
    configureNetwork: [Function: bound configureNetwork],
    setProvider: [Function: bound setProvider],
    new: [Function: bound new] {
      estimateGas: [Function: bound estimateDeployment],
      request: [Function: bound requestDeployment]
    },
    at: [Function: bound at] AsyncFunction,
    deployed: [Function: bound deployed] AsyncFunction,
    defaults: [Function: bound defaults],
    hasNetwork: [Function: bound hasNetwork],
    isDeployed: [Function: bound isDeployed],
    detectNetwork: [Function: bound detectNetwork] AsyncFunction,
    setNetwork: [Function: bound setNetwork],
    setNetworkType: [Function: bound setNetworkType],
    setWallet: [Function: bound setWallet],
    resetAddress: [Function: bound resetAddress],
    link: [Function: bound link],
    clone: [Function: bound clone],
    addProp: [Function: bound addProp],
    toJSON: [Function: bound toJSON],
    decodeLogs: [Function: bound decodeLogs],
    enums: {},
    class_defaults: { from: '0xB21b77056b72667564Dc9bbF764326261640268e' },
    interfaceAdapter: Web3InterfaceAdapter { web3: [Web3Shim] },
    web3: Web3Shim {
      currentProvider: [Getter/Setter],
      _requestManager: [RequestManager],
      givenProvider: null,
      providers: [Object],
      _provider: [HttpProvider],
      setProvider: [Function (anonymous)],
      setRequestManager: [Function (anonymous)],
      BatchRequest: [Function: bound Batch],
      extend: [Function],
      version: '1.5.3',
      utils: [Object],
      eth: [Eth],
      shh: [Shh],
      bzz: [Bzz],
      networkType: 'ethereum'
    },
    currentProvider: HttpProvider {
      withCredentials: false,
      timeout: 0,
      headers: undefined,
      agent: undefined,
      connected: true,
      host: 'http://127.0.0.1:7545',
      httpAgent: [Agent],
      send: [Function (anonymous)],
      _alreadyWrapped: true
    },
    network_id: '5777',
    disableConfirmationListener: undefined,
    ens: { enabled: false, registryAddress: null },
    synchronization_timeout: 0
  },
  methods: {
    'approvals(address,uint256)': [Function (anonymous)] {
      call: [Function (anonymous)],
      sendTransaction: [Function (anonymous)],
      estimateGas: [Function (anonymous)],
      request: [Function (anonymous)]
    },
    'approvers(uint256)': [Function (anonymous)] {
      call: [Function (anonymous)],
      sendTransaction: [Function (anonymous)],
      estimateGas: [Function (anonymous)],
      request: [Function (anonymous)]
    },
    'quorum()': [Function (anonymous)] {
      call: [Function (anonymous)],
      sendTransaction: [Function (anonymous)],
      estimateGas: [Function (anonymous)],
      request: [Function (anonymous)]
    },
    'transfers(uint256)': [Function (anonymous)] {
      call: [Function (anonymous)],
      sendTransaction: [Function (anonymous)],
      estimateGas: [Function (anonymous)],
      request: [Function (anonymous)]
    },
    'getApprovers()': [Function (anonymous)] {
      call: [Function (anonymous)],
      sendTransaction: [Function (anonymous)],
      estimateGas: [Function (anonymous)],
      request: [Function (anonymous)]
    },
    'getTransfer()': [Function (anonymous)] {
      call: [Function (anonymous)],
      sendTransaction: [Function (anonymous)],
      estimateGas: [Function (anonymous)],
      request: [Function (anonymous)]
    },
    'createTransfer(uint256,address)': [Function (anonymous)] {
      call: [Function (anonymous)],
      sendTransaction: [Function (anonymous)],
      estimateGas: [Function (anonymous)],
      request: [Function (anonymous)]
    },
    'approveTransfer(uint256)': [Function (anonymous)] {
      call: [Function (anonymous)],
      sendTransaction: [Function (anonymous)],
      estimateGas: [Function (anonymous)],
      request: [Function (anonymous)]
    }
  },
  abi: [
    {
      inputs: [Array],
      stateMutability: 'nonpayable',
      type: 'constructor',
      constant: undefined,
      payable: undefined,
      signature: 'constructor'
    },
    {
      inputs: [Array],
      name: 'approvals',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function',
      constant: true,
      payable: undefined,
      signature: '0xffabc673'
    },
    {
      inputs: [Array],
      name: 'approvers',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function',
      constant: true,
      payable: undefined,
      signature: '0xd3650fb8'
    },
    {
      inputs: [],
      name: 'quorum',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function',
      constant: true,
      payable: undefined,
      signature: '0x1703a018'
    },
    {
      inputs: [Array],
      name: 'transfers',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function',
      constant: true,
      payable: undefined,
      signature: '0x9377d711'
    },
    {
      stateMutability: 'payable',
      type: 'receive',
      constant: undefined,
      payable: true
    },
    {
      inputs: [],
      name: 'getApprovers',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function',
      constant: true,
      payable: undefined,
      signature: '0x6cb3e8ef'
    },
    {
      inputs: [],
      name: 'getTransfer',
      outputs: [Array],
      stateMutability: 'view',
      type: 'function',
      constant: true,
      payable: undefined,
      signature: '0xb87141bf'
    },
    {
      inputs: [Array],
      name: 'createTransfer',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
      constant: undefined,
      payable: undefined,
      signature: '0x4c12fa47'
    },
    {
      inputs: [Array],
      name: 'approveTransfer',
      outputs: [],
      stateMutability: 'nonpayable',
      type: 'function',
      constant: undefined,
      payable: undefined,
      signature: '0xcacca4a0'
    }
  ],
  address: '0xF1c99cE88BE5d099156A19e2977D778B8845966C',
  transactionHash: '0xb9e24b484366d84330c79c2002aeb849e71a75aad60cf7ef1891b8e7e4b800ac',
  contract: Contract {
    setProvider: [Function (anonymous)],
    currentProvider: [Getter/Setter],
    _requestManager: RequestManager {
      provider: [HttpProvider],
      providers: [Object],
      subscriptions: Map(0) {}
    },
    givenProvider: null,
    providers: {
      WebsocketProvider: [Function: WebsocketProvider],
      HttpProvider: [Function: HttpProvider],
      IpcProvider: [Function: IpcProvider]
    },
    _provider: HttpProvider {
      withCredentials: false,
      timeout: 0,
      headers: undefined,
      agent: undefined,
      connected: true,
      host: 'http://127.0.0.1:7545',
      httpAgent: [Agent],
      send: [Function (anonymous)],
      _alreadyWrapped: true
    },
    setRequestManager: [Function (anonymous)],
    BatchRequest: [Function: bound Batch],
    extend: [Function: ex] {
      formatters: [Object],
      utils: [Object],
      Method: [Function: Method]
    },
    clearSubscriptions: [Function (anonymous)],
    options: { address: [Getter/Setter], jsonInterface: [Getter/Setter] },
    handleRevert: [Getter/Setter],
    defaultCommon: [Getter/Setter],
    defaultHardfork: [Getter/Setter],
    defaultChain: [Getter/Setter],
    transactionPollingTimeout: [Getter/Setter],
    transactionConfirmationBlocks: [Getter/Setter],
    transactionBlockTimeout: [Getter/Setter],
    defaultAccount: [Getter/Setter],
    defaultBlock: [Getter/Setter],
    methods: {
      approvals: [Function: bound _createTxObject],
      '0xffabc673': [Function: bound _createTxObject],
      'approvals(address,uint256)': [Function: bound _createTxObject],
      approvers: [Function: bound _createTxObject],
      '0xd3650fb8': [Function: bound _createTxObject],
      'approvers(uint256)': [Function: bound _createTxObject],
      quorum: [Function: bound _createTxObject],
      '0x1703a018': [Function: bound _createTxObject],
      'quorum()': [Function: bound _createTxObject],
      transfers: [Function: bound _createTxObject],
      '0x9377d711': [Function: bound _createTxObject],
      'transfers(uint256)': [Function: bound _createTxObject],
      getApprovers: [Function: bound _createTxObject],
      '0x6cb3e8ef': [Function: bound _createTxObject],
      'getApprovers()': [Function: bound _createTxObject],
      getTransfer: [Function: bound _createTxObject],
      '0xb87141bf': [Function: bound _createTxObject],
      'getTransfer()': [Function: bound _createTxObject],
      createTransfer: [Function: bound _createTxObject],
      '0x4c12fa47': [Function: bound _createTxObject],
      'createTransfer(uint256,address)': [Function: bound _createTxObject],
      approveTransfer: [Function: bound _createTxObject],
      '0xcacca4a0': [Function: bound _createTxObject],
      'approveTransfer(uint256)': [Function: bound _createTxObject]
    },
    events: { allEvents: [Function: bound ] },
    _address: '0xF1c99cE88BE5d099156A19e2977D778B8845966C',
    _jsonInterface: [
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object],
      [Object], [Object]
    ],
    transactionHash: '0xb9e24b484366d84330c79c2002aeb849e71a75aad60cf7ef1891b8e7e4b800ac'
  },
  approvals: [Function (anonymous)] {
    call: [Function (anonymous)],
    sendTransaction: [Function (anonymous)],
    estimateGas: [Function (anonymous)],
    request: [Function (anonymous)]
  },
  approvers: [Function (anonymous)] {
    call: [Function (anonymous)],
    sendTransaction: [Function (anonymous)],
    estimateGas: [Function (anonymous)],
    request: [Function (anonymous)]
  },
  quorum: [Function (anonymous)] {
    call: [Function (anonymous)],
    sendTransaction: [Function (anonymous)],
    estimateGas: [Function (anonymous)],
    request: [Function (anonymous)]
  },
  transfers: [Function (anonymous)] {
    call: [Function (anonymous)],
    sendTransaction: [Function (anonymous)],
    estimateGas: [Function (anonymous)],
    request: [Function (anonymous)]
  },
  getApprovers: [Function (anonymous)] {
    call: [Function (anonymous)],
    sendTransaction: [Function (anonymous)],
    estimateGas: [Function (anonymous)],
    request: [Function (anonymous)]
  },
  getTransfer: [Function (anonymous)] {
    call: [Function (anonymous)],
    sendTransaction: [Function (anonymous)],
    estimateGas: [Function (anonymous)],
    request: [Function (anonymous)]
  },
  createTransfer: [Function (anonymous)] {
    call: [Function (anonymous)],
    sendTransaction: [Function (anonymous)],
    estimateGas: [Function (anonymous)],
    request: [Function (anonymous)]
  },
  approveTransfer: [Function (anonymous)] {
    call: [Function (anonymous)],
    sendTransaction: [Function (anonymous)],
    estimateGas: [Function (anonymous)],
    request: [Function (anonymous)]
  },
  sendTransaction: [Function (anonymous)],
  send: [Function (anonymous)],
  allEvents: [Function (anonymous)],
  getPastEvents: [Function (anonymous)]
}
